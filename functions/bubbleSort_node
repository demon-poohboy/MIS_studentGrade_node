#include <iostream>
#include<iomanip>
#include <string>
using namespace std;
struct Node{
	int num;
	string name; 
	int score;
	Node *next;
}stu7{7,"stu7",50,0},stu6{6,"stu6",52,&stu7},stu5{5,"stu5",54,&stu6},stu4{4,"stu4",57,&stu5},stu3{3,"stu3",59,&stu4},stu2{2,"stu2",51,&stu3},stu1{1,"stu1",53,&stu2};

Node *head = &stu1;
Node *p1,*p2,*p3;
bool flag = 1,pFlag = 0,pSort = 0;
void swap(Node *p1,Node *p2)
{
	Node *pTemp2;
	pTemp2 = p1;
	p1 = p2;
	p2 = pTemp2;
}

int main()
{	
//before sort
    Node *p = head;
	cout<<"链表上的各个节点为：\n";
	cout<<left<<setw(8)<<"学号"<<setw(8)<<"姓名"<<setw(6)<<"成绩"<<'\n';	
	while(p != NULL)
	{
	    cout<<left<<setw(8)<<p->num<<setw(8)<<p->name<<setw(6)<<p->score<<'\n';
        p = p->next;
    } 	
    cout<<'\n';
//after sort
    int temp,n,i;
    p1 = head ,p2 = p1->next,p3=head;  
    for(i = 0,p = head;p->next->next !=0;i++)//cout node number
    {
    	p = p->next;
	}
    for(;i > 0;i--)
    {
    	p1 = head ;
		p2 = p1->next;
		p3=head;
		flag = 1;
		pSort = 0;//optimize
    	do
    	{
    		if(p2->next == 0)
			{
				flag = 0;
			}
    		if(p1 == head)//method begining
        	{
        		if(p1->score > p2->score)
    	    	{
    	    		Node *pTemp = p2; //copy
		    		p1->next = p2->next;
	    			head = p2;
		    	    p2 = pTemp;
	    	    	p2->next = p1;
	    		    //结点交换后，p1与p2位置颠倒回来
                    Node *pTemp2;
                    pTemp2 = p1;
                	p1 = p2;
                 	p2 = pTemp2;
                 	p = head;
		    	}
		    	p1 = p1->next;
			    p2 = p2->next;
			    if(p2->next == 0)//method ending
	        	{
		    	if(p1->next->score > p2->next->score)
		        	{
		        		Node *pTemp = p3;//copy
		    	    	p3->next = p2;
		    	    	p2->next = p1;
	    	    		p1->next = 0;
		    	    	//结点交换后，p1与p2位置颠倒回来
                        Node *pTemp2;
                        pTemp2 = p1;
                        p1 = p2;
                        p2 = pTemp2;
                        p3 = pTemp;  
                    }   
		    	}
		    	else//method middle
	        	{
	    	    	if(p1->score > p2->score)
	    	    	{
	    	    		Node *pTemp = p3;//copy
	    	    		p3->next = p2;
	    	    		p1->next = p2->next ;
	    	    		p2->next = p1;
	    	    		//结点交换后，p1与p2位置颠倒回来,p3恢复
                        Node *pTemp2;
                        pTemp2 = p1;
                    	p1 = p2;
                     	p2 = pTemp2;
			    		p3 = pTemp;    			
		    		}
	        	}
	        //p = head;
	        p3 = head;
	        }
	    	else if(p2->next == 0)//method ending
	    	{
		    	if(p1->score > p2->score)
		    	{
		    		Node *pTemp = p3;//copy
		    		p3->next = p2;
		    		p2->next = p1;
	    			p1->next = 0;
		    		//结点交换后，p1与p2位置颠倒回来
                    Node *pTemp2;
                    pTemp2 = p1;
                    p1 = p2;
                    p2 = pTemp2;
                    p3 = pTemp;    				
		    	}
	    	}
	    	else//method middle
	    	{
	    		if(p1->score > p2->score)
	    		{
	    			Node *pTemp = p3;//copy
	    	    	p3->next = p2;
	    	    	p1->next = p2->next ;
	    	    	p2->next = p1;
	    			//结点交换后，p1与p2位置颠倒回来,p3恢复
                    Node *pTemp2;
                    pTemp2 = p1;
                    p1 = p2;
                    p2 = pTemp2;
			    	p3 = pTemp;     			
				}
	    	}
			p1 = p1->next;
			p2 = p2->next;	
			p3 = p3->next;	
	 	}while(flag);
		if(pSort) break;	
    }
    p = head;
	cout<<"排序之后为：\n";
	cout<<left<<setw(8)<<"学号"<<setw(8)<<"姓名"<<setw(6)<<"成绩"<<'\n';	
	while(p != NULL)
	{
	    cout<<left<<setw(8)<<p->num<<setw(8)<<p->name<<setw(6)<<p->score<<'\n';
        p = p->next;
    } 
}
/*	for (i = 0; i < n;i++) 
	{  
	    bool flag = true;           
		for (j = 0; j < n - i;j++) {      //在每一步进行10-i次两两比较
			if (m[j] > m[j + 1]) {
				flag = false;
				temp = m[j];
				m[j] = m[j + 1];
				m[j + 1] = temp;
			}
		}
		if(flag) break;
	}
*/
//before sort
